name: Release Creation

on:
  release:
    types: [published]

permissions:
  contents: write
  packages: write
  actions: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # Install zip if not available
      - name: Install zip
        run: sudo apt-get install -y zip

      # Debugging: Check if the 'zip' command is available
      - name: Check for zip command
        run: which zip

      # Substitute the Manifest and Download URLs in the module.json
      - name: Substitute Manifest and Download Links For Versioned Ones
        id: sub_manifest_link_version
        uses: microsoft/variable-substitution@v1
        with:
          files: './dist/module.json'
        env:
          version: ${{ github.event.release.tag_name }}
          url: https://github.com/${{ github.repository }}
          manifest: https://github.com/${{ github.repository }}/releases/latest/download/dist/module.json
          download: https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/module.zip

      # Debugging: Check directory contents
      - name: List dist directory
        run: ls -la ./dist

      # Create a zip file with all files required by the module to add to the release
      - name: Create zip file
        run: cd dist && zip -r ../module.zip .

      # Debugging: Check if the zip file was created
      - name: List root directory
        run: ls -la .

      # Create a release for this specific version
      - name: Update Release with Files
        id: create_version_release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          allowUpdates: true # Set this to false if you want to prevent updating existing releases
          name: ${{ github.event.release.name }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: './dist/module.json, ./module.zip'
          tag: ${{ github.event.release.tag_name }}
          body: ${{ github.event.release.body }}
